import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as r,c as i,f as t,a,b as e,e as o}from"./app-10c9b02b.js";const l={},d={href:"https://juejin.cn/post/7509433454464909321",target:"_blank",rel:"noopener noreferrer"},u={href:"https://juejin.cn/post/7509016779038588982",target:"_blank",rel:"noopener noreferrer"},k={href:"https://juejin.cn/post/7508556336540876800",target:"_blank",rel:"noopener noreferrer"},v={href:"https://juejin.cn/post/7509433454464909321",target:"_blank",rel:"noopener noreferrer"},m={href:"https://juejin.cn/post/7509016779038588982",target:"_blank",rel:"noopener noreferrer"},b={href:"https://juejin.cn/post/7508556336540876800",target:"_blank",rel:"noopener noreferrer"};function R(f,n){const s=c("ExternalLinkIcon");return r(),i("div",null,[n[8]||(n[8]=t('<h3 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h3><p>Remix 的创始人 <code>Michael Jackson</code> 和 <code>Ryan Florence</code> 发文介绍了 Remix 的最新动态：<code>React Router v7</code> 正式发布，支持 <code>React Server Components (RSC)</code>，而 <code>Remix v3</code> 将基于 <code>Preact</code> 重新设计。</p><figure><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/e0f70063bd7845c197a7260b2596dd05~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg6JCM6JCM5ZOS6I2J5aS05bCG5Yab:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiMTExNjc1OTU0MzI2MDcyNyJ9&amp;rk3s=f64ab15b&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1749612054&amp;x-orig-sign=OaG%2BUQYDP3anvx2v1UrytGizeWY%3D" alt="推特" tabindex="0" loading="lazy"><figcaption>推特</figcaption></figure><h4 id="往期精彩推荐" tabindex="-1"><a class="header-anchor" href="#往期精彩推荐" aria-hidden="true">#</a> 往期精彩推荐</h4>',4)),a("ul",null,[a("li",null,[a("a",d,[n[0]||(n[0]=e("🚀🚀🚀 这些高效实用的 vite 插件你一定要知道！更新弹窗、mock 数据、开发快捷键、自动导入...")),o(s)])]),a("li",null,[a("a",u,[n[1]||(n[1]=e("⚡️ 量大管饱，这 9 个 vite 插件让你的开发更简单！🚀🚀🚀")),o(s)])]),a("li",null,[a("a",k,[n[2]||(n[2]=e("⚡️⚡️⚡️ tsdown 推出了 Unbundle 模式，开发更高效！")),o(s)])]),n[3]||(n[3]=a("li",null,"更多精彩文章欢迎关注我的公众号：萌萌哒草头将军",-1))]),n[9]||(n[9]=t(`<h3 id="正文" tabindex="-1"><a class="header-anchor" href="#正文" aria-hidden="true">#</a> 正文</h3><p>Remix 作为现代 <code>Web</code> 开发的热门全栈框架，近期通过一篇博客文章宣布了重大更新：<code>React Router v7</code> 正式发布，支持 <code>React Server Components (RSC)</code>，而 <code>Remix v3</code> 将基于 <code>Preact</code> 重新设计，追求更轻量和高性能的开发体验！</p><h4 id="remix-与-react-router-v7-新功能的融合" tabindex="-1"><a class="header-anchor" href="#remix-与-react-router-v7-新功能的融合" aria-hidden="true">#</a> Remix 与 <code>React Router v7</code>：新功能的融合</h4><p>Remix 是一个基于 <code>React Router</code> 的全栈 <code>Web</code> 框架，以其文件系统路由和数据加载功能受到开发者喜爱。昨日，Remix 官方博客发布文章，宣布 <code>React Router v7</code> 正式推出，并支持 <code>React Server Components (RSC)</code>。这一版本将 <code>Remix v2</code> 的功能整合到其“框架模式”中，为开发者提供了平滑的 <code>RSC</code> 采用路径。</p><p><code>React Router v7</code> 的主要新特性包括：</p><ul><li><strong>RSC 支持</strong>：允许逐步引入服务器端组件，降低迁移成本，优化数据加载和渲染。</li><li><strong>增强的 loaders 和 actions</strong>：支持服务器端数据处理，简化复杂路由的逻辑管理。</li><li><strong>服务器端路由</strong>：提供一流的服务器端路由支持，适合大规模应用。</li></ul><p>这些功能使 <code>React Router v7</code> 不仅是一个前端路由库，还能通过框架模式提供类似 <code>Remix</code> 的全栈开发体验。</p><p>以下是一个简单的 <code>React Router v7</code> 示例，展示其 <code>loader</code> 功能：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createBrowserRouter<span class="token punctuation">,</span> RouterProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react-router-dom&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createBrowserRouter</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">element</span><span class="token operator">:</span> <span class="token operator">&lt;</span>Home <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">loader</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&quot;Hello from React Router v7&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token operator">&lt;</span>RouterProvider router<span class="token operator">=</span><span class="token punctuation">{</span>router<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="remix-v3-将基于-preact-的重构" tabindex="-1"><a class="header-anchor" href="#remix-v3-将基于-preact-的重构" aria-hidden="true">#</a> <code>Remix v3</code> 将基于 <code>Preact</code> 的重构</h4><p><code>Remix v3</code> 被定位为对 <code>Web</code> 框架的重新构想，计划基于 <code>Preact</code> 重构。<code>Preact</code> 是一个轻量级的 <code>React</code> 替代品，API 类似但体积更小、性能更高。<code>Remix v3</code> 旨在减少依赖、提升性能，并提供模块化工具包和内置组件库（如复兴的 <code>Reach UI</code>）！</p><p>以下是一个 <code>Remix v3</code> 的概念性示例（假设基于 <code>Preact</code>）：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// routes/index.tsx</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineLoader <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;remix&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> loader <span class="token operator">=</span> <span class="token function">defineLoader</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;Hello from Remix v3&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Home</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> message <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useLoaderData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span>message<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="最后" tabindex="-1"><a class="header-anchor" href="#最后" aria-hidden="true">#</a> 最后</h3><p><code>React Router v7</code> 的 <code>RSC</code> 支持和框架模式为开发者提供了灵活的全栈功能，而 <code>Remix v3</code> 基于 <code>Preact</code> 的重构则开启了轻量、高性能的新篇章！</p><p>今天的分享就这些了，感谢大家的阅读，如果文章中存在错误的地方欢迎指正！</p><h4 id="往期精彩推荐-1" tabindex="-1"><a class="header-anchor" href="#往期精彩推荐-1" aria-hidden="true">#</a> 往期精彩推荐</h4>`,17)),a("ul",null,[a("li",null,[a("a",v,[n[4]||(n[4]=e("🚀🚀🚀 这些高效实用的 vite 插件你一定要知道！更新弹窗、mock 数据、开发快捷键、自动导入...")),o(s)])]),a("li",null,[a("a",m,[n[5]||(n[5]=e("⚡️ 量大管饱，这 9 个 vite 插件让你的开发更简单！🚀🚀🚀")),o(s)])]),a("li",null,[a("a",b,[n[6]||(n[6]=e("⚡️⚡️⚡️ tsdown 推出了 Unbundle 模式，开发更高效！")),o(s)])]),n[7]||(n[7]=a("li",null,"更多精彩文章欢迎关注我的公众号：萌萌哒草头将军",-1))])])}const g=p(l,[["render",R],["__file","苏醒吧，Remix！好消息，Remix将基于Preact 重构，更快更轻量！🚀🚀🚀.html.vue"]]);export{g as default};
