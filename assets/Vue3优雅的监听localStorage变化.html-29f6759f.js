import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as e,c,a as n,b as s,e as t,f as l}from"./app-a09c4eb3.js";const i={},u=n("blockquote",null,[n("p",null,"文章同步在公众号： 萌萌哒草头将军"),n("p",null,"最近公众号有🎁，欢迎关注了解")],-1),r=n("p",null,[s("最近在研究框架，也仔细用了"),n("code",null,"Vue3"),s("一些功能，今天分享一次我的实践：")],-1),k=n("p",null,[n("strong",null,[n("code",null,"Vue3"),s("如何监听"),n("code",null,"localStorage"),s("的变化。")])],-1),d={href:"https://juejin.cn/post/7241567583504728119",title:"https://juejin.cn/post/7241567583504728119",target:"_blank",rel:"noopener noreferrer"},v={href:"https://juejin.cn/post/7242249906257363001",target:"_blank",rel:"noopener noreferrer"},m=l(`<h3 id="💡-为什么要这样做" tabindex="-1"><a class="header-anchor" href="#💡-为什么要这样做" aria-hidden="true">#</a> 💡 为什么要这样做？</h3><p>原生的<code>localStorage</code>只能监听同源地址下不同页面的<code>localStorage</code>变化，作为单页面应用，显然不实用。所以我打算自定义一个<code>hook</code>监听<code>localStorage</code>的变化。</p><h3 id="💎-思路" tabindex="-1"><a class="header-anchor" href="#💎-思路" aria-hidden="true">#</a> 💎 思路</h3><p>首先我们需要重写<code>localStorage</code>下的所有方法，这样在每个方法被使用的时候就可以被监听到了。</p><p>此时就需要一个事件机制，用于传递消息。</p><p>在<code>Vue3</code>移除了<code>$on</code>、<code>$emit</code>事件接口后，我们可以借助第三方库实现：<code>mitt</code>、<code>tiny-emitter</code>.</p><p>不过我打算使用自己实现的<code>中介者模式</code>作为通信方法。</p><h3 id="💎-实现" tabindex="-1"><a class="header-anchor" href="#💎-实现" aria-hidden="true">#</a> 💎 实现</h3><h4 id="🚗-实现中介者模式" tabindex="-1"><a class="header-anchor" href="#🚗-实现中介者模式" aria-hidden="true">#</a> 🚗 实现<code>中介者模式</code></h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// mediator.ts</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">MediatorProps</span> <span class="token punctuation">{</span>
  uuid<span class="token operator">?</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
  publish<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">topic</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token operator">:</span> unknown<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  subscribe<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>topic<span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args<span class="token operator">:</span> unknown<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> mediator <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> topics <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    uuid <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">subscribe</span><span class="token punctuation">(</span>topic<span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args<span class="token operator">:</span> unknown<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    uuid<span class="token operator">++</span><span class="token punctuation">;</span>
    topics<span class="token punctuation">[</span>topic<span class="token punctuation">]</span> <span class="token operator">=</span> topics<span class="token punctuation">[</span>topic<span class="token punctuation">]</span>
      <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token operator">...</span>topics<span class="token punctuation">[</span>topic<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> callback<span class="token punctuation">,</span> uuid <span class="token punctuation">}</span><span class="token punctuation">]</span>
      <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> callback<span class="token punctuation">,</span> uuid <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">publish</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">topic</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token operator">:</span> unknown<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>topics<span class="token punctuation">[</span>topic<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      topics<span class="token punctuation">[</span>topic<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">install</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">obj</span><span class="token operator">:</span> MediatorProps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      obj<span class="token punctuation">.</span>uuid <span class="token operator">=</span> uuid<span class="token punctuation">;</span>
      obj<span class="token punctuation">.</span>publish <span class="token operator">=</span> publish<span class="token punctuation">;</span>
      obj<span class="token punctuation">.</span>subscribe <span class="token operator">=</span> subscribe<span class="token punctuation">;</span>
      <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> mediator<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="🚗-重写localstorage" tabindex="-1"><a class="header-anchor" href="#🚗-重写localstorage" aria-hidden="true">#</a> 🚗 重写<code>localStorage</code></h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// localStorage.ts</span>
<span class="token keyword">import</span> mediator <span class="token keyword">from</span> <span class="token string">&quot;./mediator&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token literal-property property">keys</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">createMediator</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> mediator<span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> sub <span class="token operator">=</span> <span class="token function">createMediator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> $localStorage <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">getItem</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">key</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> window<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function-variable function">setItem</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">key</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 防止重复发布</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>keys<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> keys<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 被修改就发布事件</span>
    sub<span class="token punctuation">.</span><span class="token function">publish</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>    

    window<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">clear</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 被删除就每个key发布事件</span>
    keys<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> sub<span class="token punctuation">.</span><span class="token function">publish</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 发布后清空记录key的数组</span>
    keys<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    window<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">removeItem</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">key</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    keys<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>keys<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 被移除就发布 undefined</span>
    sub<span class="token punctuation">.</span><span class="token function">publish</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    window<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">key</span><span class="token operator">:</span> window<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span>key<span class="token punctuation">,</span>
  <span class="token literal-property property">length</span><span class="token operator">:</span> window<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="🚗-实现usestorage-hook" tabindex="-1"><a class="header-anchor" href="#🚗-实现usestorage-hook" aria-hidden="true">#</a> 🚗 实现<code>useStorage hook</code></h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// useStorage.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> mediator <span class="token keyword">from</span> <span class="token string">&quot;./mediator&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">createMediator</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> mediator<span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">useStorage</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">key</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  
  <span class="token keyword">const</span> string <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> sub <span class="token operator">=</span> <span class="token function">createMediator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  sub<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> string<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="💎-测试" tabindex="-1"><a class="header-anchor" href="#💎-测试" aria-hidden="true">#</a> 💎 测试</h3><h4 id="🚗-使用localstorage" tabindex="-1"><a class="header-anchor" href="#🚗-使用localstorage" aria-hidden="true">#</a> 🚗 使用<code>localStorage</code></h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// One.vue</span>
<span class="token comment">// 使用localStorage</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> watch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useStorage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./hook&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token function">useStorage</span><span class="token punctuation">(</span><span class="token string">&quot;yourKey&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">watch</span><span class="token punctuation">(</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="🚗-监听localstorage变化" tabindex="-1"><a class="header-anchor" href="#🚗-监听localstorage变化" aria-hidden="true">#</a> 🚗 监听<code>localStorage</code>变化</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Two.vue</span>
<span class="token comment">// 监听localStorage</span>
<span class="token operator">&lt;</span>script setup lang<span class="token operator">=</span><span class="token string">&quot;ts&quot;</span><span class="token operator">&gt;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> localStorage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./hook&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button
        type<span class="token operator">=</span><span class="token string">&quot;button&quot;</span>
        @click<span class="token operator">=</span><span class="token string">&quot;$localStorage.setItem(&#39;a&#39;, count++);&quot;</span>
      <span class="token operator">&gt;</span>
        count is <span class="token punctuation">{</span><span class="token punctuation">{</span> count <span class="token punctuation">}</span><span class="token punctuation">}</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="🚗-结果" tabindex="-1"><a class="header-anchor" href="#🚗-结果" aria-hidden="true">#</a> 🚗 结果</h4><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/278f1afe15e04feaacc7ab64cefc4496~tplv-k3u1fbpfcp-watermark.image?" alt="down33.gif" tabindex="0" loading="lazy"><figcaption>down33.gif</figcaption></figure><p>好了今天的分享的就到了，希望今天的分享可以帮助到你！</p>`,22),b={href:"https://codesandbox.io/p/sandbox/hardcore-hodgkin-qp5lwu",target:"_blank",rel:"noopener noreferrer"};function g(f,h){const a=o("ExternalLinkIcon");return e(),c("div",null,[u,r,k,n("ul",null,[n("li",null,[n("a",d,[s("🎉干货满满，React设计原理(一)：藏在源码里的紧箍咒，几个容易混淆的变量🎉"),t(a)])]),n("li",null,[n("a",v,[s("🎉干货满满，React设计原理(二)：藏在源码里的两个圈，重要的链表结构和双缓存技术🎉"),t(a)])])]),m,n("p",null,[s("源码点这里："),n("a",b,[s("https://codesandbox.io/p/sandbox/hardcore-hodgkin-qp5lwu"),t(a)])])])}const _=p(i,[["render",g],["__file","Vue3优雅的监听localStorage变化.html.vue"]]);export{_ as default};
