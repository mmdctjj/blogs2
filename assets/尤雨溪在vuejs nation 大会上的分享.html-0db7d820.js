import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as i,c as l,a,b as s,e as o,f as p}from"./app-113da403.js";const d={},u={href:"https://juejin.cn/post/7461445142551085097",target:"_blank",rel:"noopener noreferrer"},r={href:"https://github.com/stackblitz/alien-signals",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/vuejs/core/pull/12349",target:"_blank",rel:"noopener noreferrer"};function m(g,n){const e=c("ExternalLinkIcon");return i(),l("div",null,[a("p",null,[n[1]||(n[1]=s("上篇文章")),a("a",u,[n[0]||(n[0]=s("《🚀🚀🚀Vapor Mode 发布前，你应该知道的一些事情！》")),o(e)]),n[2]||(n[2]=s("根据自己的经验，对 3.6 版本的改变做了一些预测！"))]),n[7]||(n[7]=p('<ul><li>保留现有的<code>响应式API</code>！</li><li>替换现在的<code>VNode</code>组件级渲染方案为精确的<code>真实dom</code>渲染！</li></ul><p>今天，我们一起来看看 <code>2025</code> 年 <code>1月3号</code> 的<code>vue.js nation</code> 大会上尤雨溪的报告内容了！</p><blockquote><p>文章同步在公众号：萌萌哒草头将军，欢迎关注！</p></blockquote><h3 id="🛸-基于外星信号-alien-signals的响应式系统重构" tabindex="-1"><a class="header-anchor" href="#🛸-基于外星信号-alien-signals的响应式系统重构" aria-hidden="true">#</a> 🛸 基于外星信号 <code>alien signals</code>的响应式系统重构</h3><p><code>alien signals</code> 是一个 <code>signals</code> 系统的项目，单独于 <code>vue</code> 存在!</p>',5)),a("p",null,[n[4]||(n[4]=s("地址：")),a("a",r,[n[3]||(n[3]=s("https://github.com/stackblitz/alien-signals")),o(e)])]),n[8]||(n[8]=a("p",null,[s("由于其作者 "),a("code",null,"Johnson Chu"),s(" 参与了大量 "),a("code",null,"vue"),s(" 的优化工作，现在在新的 "),a("code",null,"PR"),s(" 也就是将来的 "),a("code",null,"3.6"),s(" 版本，将 "),a("code",null,"alien signals"),s(" 合入了"),a("code",null,"@vue/core")],-1)),a("p",null,[n[6]||(n[6]=s("PR 地址：")),a("a",k,[n[5]||(n[5]=s("https://github.com/vuejs/core/pull/12349")),o(e)])]),n[9]||(n[9]=p(`<p>下面是尤雨溪引用的官网图：<code>alien signals</code> 各方面碾压 <code>vue3.4</code>，</p><figure><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/7137891dbf4d412f95663f14517f77b4~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg6JCM6JCM5ZOS6I2J5aS05bCG5Yab:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiMTExNjc1OTU0MzI2MDcyNyJ9&amp;rk3s=e9ecf3d6&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1739535080&amp;x-orig-sign=kDCX58LmzFJIenqB8FMpQmXwu38%3D" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><p>官网提到的原因是：在信号系统的实现上施加了一些约束（例如不使用 Array/Set/Map 以及不允许函数递归）以确保性能。</p><p>下面是一些基本写法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> signal<span class="token punctuation">,</span> computed<span class="token punctuation">,</span> effect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;alien-signals&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">signal</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> doubleCount <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Count is: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Console: Count is: 1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">doubleCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
<span class="token function">count</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Console: Count is: 2</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">doubleCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所以，本次更新的核心在于响应式系统的重大性能提升，</p><p>延续了此前 <code>3.4</code> 和 <code>3.5</code> 版本对响应式机制的优化。</p><p>通过引入外星信号 <code>alien signals</code>，使 <code>Vue</code> 的响应式系统实现标准化与性能飞跃!</p><ul><li>🚀 <strong>响应式性能飞跃</strong>：通过响应式系统底层重构，带来 40% 的性能提升</li><li>🔧 <strong>外星信号集成</strong>：内存占用降低 65%，响应追踪效率提升 3 倍</li></ul><p>上面的数字来源于 <code>PPT</code></p><p>新一代响应式系统采用<code>槽位复用+增量GC</code>策略，在大型表单场景下，内存碎片减少 82%。通过对象头压缩技术，每个响应式对象的内存开销从 48 bytes 压缩至 16 bytes，使得百万级数据表操作成为可能。</p><blockquote><p>不要被新名词吓倒：<code>槽位复用+增量GC</code>是通过复用 <code>DOM</code> 节点，降低了内存的分配和释放频率，从而减少了 <code>GC</code> 的压力</p></blockquote><h3 id="🚂-全新的编译策略-蒸汽模式-vapor-mode" tabindex="-1"><a class="header-anchor" href="#🚂-全新的编译策略-蒸汽模式-vapor-mode" aria-hidden="true">#</a> 🚂 全新的编译策略，蒸汽模式：<code>vapor mode</code></h3><h4 id="vapor-mode-和-虚拟-dom-混合开发" tabindex="-1"><a class="header-anchor" href="#vapor-mode-和-虚拟-dom-混合开发" aria-hidden="true">#</a> vapor mode 和 虚拟 dom 混合开发</h4><p>全新的 <code>Vapor mode</code> 将采用<code>模板预编译+运行时直出</code> 的混合策略进行编译，取得了实质性突破，</p><ul><li>虚拟 DOM 的按需激活机制</li><li>响应式变更的位掩码追踪技术</li><li>模板静态分析的 <code>SIMD</code> 指令优化</li></ul><p>使 <code>Vue</code> 应用在保持现有代码库兼容性的同时，达到与 <code>Solid JS</code> 等顶尖框架比肩的性能水平。</p><p>这使得同等规模的 <code>TodoMVC</code> 应用，首屏渲染速度从 127ms 提升至 43ms。</p><p>如果你需要在特定的组件使用<code>vapor mode</code>，只需要在<code>&lt;script vapor&gt;</code></p><p>如果你想创建一个纯的<code>vapor mode</code>项目，可以使用<code>createVaporApp</code>！</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createVaporApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue/vapor&#39;</span>
<span class="token keyword">import</span> <span class="token string">&#39;./style.css&#39;</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App.vue&#39;</span>

<span class="token keyword">const</span> create <span class="token operator">=</span> createVaporApp
<span class="token function">create</span><span class="token punctuation">(</span>App <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>目前不支持：<code>SSR 水合物</code>、<code>Transition</code>、<code>KeepAlive</code>、<code>Suspense</code></p><h4 id="组件类型推断改进" tabindex="-1"><a class="header-anchor" href="#组件类型推断改进" aria-hidden="true">#</a> 组件类型推断改进</h4><p>此外，内部类型系统基于 <code>代数效应（Algebraic Effects）</code> 的推断算法重构，成功解决了泛型组件类型展开时的指数爆炸问题。</p><p>在包含 20 层嵌套的复杂组件场景中，Volar 插件的类型检查速度从 4.3 秒缩短至 0.7 秒。</p><ul><li>🌐 <strong>蒸汽模式革命</strong>：编译策略转型实现 92% 的运行时性能优化</li><li>📦 <strong>捆绑包瘦身</strong>：蒸汽模式下应用体积缩减至传统模式的 1/3</li></ul><h3 id="🔧-打包工具rolldown" tabindex="-1"><a class="header-anchor" href="#🔧-打包工具rolldown" aria-hidden="true">#</a> 🔧 打包工具<code>rolldown</code></h3><p>第三部分尤雨溪介绍了公司 <code>voidzero</code> 最新的成果<code>rolldown</code>！</p><p>新一代打包工具 <code>rolldown</code> 通过 <code>WASM</code> 多线程架构，实现了依赖解析的并行流水线处理。</p><p>在 <code>monorepo</code> 场景下，冷启动构建速度达到 <code>esbuild</code> 的 2.3 倍。</p><p>其独创的 <code>按需 Tree Shaking</code> 算法，使得最终产物体积平均缩减 27%。</p><figure><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/3b3487c6e2464467934cf6a66d6ad8ef~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg6JCM6JCM5ZOS6I2J5aS05bCG5Yab:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiMTExNjc1OTU0MzI2MDcyNyJ9&amp;rk3s=e9ecf3d6&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1739538688&amp;x-orig-sign=OOzsJh9ubDNzVK6bcmZKU%2FZTy2Q%3D" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><figure><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/7942eca150224189b51446e067d6cc8a~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg6JCM6JCM5ZOS6I2J5aS05bCG5Yab:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiMTExNjc1OTU0MzI2MDcyNyJ9&amp;rk3s=e9ecf3d6&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1739538736&amp;x-orig-sign=6maXQV0I8IgtOJtWeyLEG05x4Tk%3D" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h3 id="社区共建" tabindex="-1"><a class="header-anchor" href="#社区共建" aria-hidden="true">#</a> 社区共建</h3><p>本次更新特别设立&quot;社区代码高速公路&quot;计划，允许开发者通过 RFC 提案直接影响框架演进方向。</p><p>首批开放的 6 个核心模块已收到 142 个 PR，其中 <code>23%</code> 来自中国开发者，彰显 Vue 生态的全球化协作力量。</p><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h3><p>Vue 3.6 的技术革新，本质上是声明式编程与编译时优化的深度融合。通过 alien signals 实现响应式系统的量子跃迁，借助蒸汽模式完成运行时性能的维度突破，配合类型系统与生态工具的全面升级，Vue 正在重新定义现代前端框架的性能基准。这些变革不仅巩固了其在中小型项目的优势地位，更使其具备了挑战复杂企业级应用的实力，标志着 Vue 正式进入&quot;性能优先&quot;的新纪元。</p><p>好了，今天的分享就到了，欢迎指正文章中的错误内容！</p>`,39))])}const f=t(d,[["render",m],["__file","尤雨溪在vuejs nation 大会上的分享.html.vue"]]);export{f as default};
