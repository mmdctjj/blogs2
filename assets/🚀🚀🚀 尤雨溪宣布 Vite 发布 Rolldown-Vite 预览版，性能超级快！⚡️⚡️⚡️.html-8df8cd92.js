import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as s,c as a,f as i,a as o,b as d,e as t}from"./app-10c9b02b.js";const c={},u={href:"https://voidzero.dev/posts/announcing-rolldown-vite",target:"_blank",rel:"noopener noreferrer"},p={href:"https://juejin.cn/post/7509433454464909321",target:"_blank",rel:"noopener noreferrer"},v={href:"https://juejin.cn/post/7509016779038588982",target:"_blank",rel:"noopener noreferrer"},h={href:"https://juejin.cn/post/7509878884356866067",target:"_blank",rel:"noopener noreferrer"},g={href:"https://juejin.cn/post/7509433454464909321",target:"_blank",rel:"noopener noreferrer"},m={href:"https://juejin.cn/post/7509016779038588982",target:"_blank",rel:"noopener noreferrer"},b={href:"https://juejin.cn/post/7509878884356866067",target:"_blank",rel:"noopener noreferrer"};function _(V,e){const n=r("ExternalLinkIcon");return s(),a("div",null,[e[10]||(e[10]=i('<h3 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h3><p>前几天我分享了 <code>vite</code> 即将推出 <code>Rolldown</code> 版本，现在它来了！</p><p><code>2025</code> 年 <code>5</code> 月 <code>30</code> 日，<code>VoidZero</code> 团队发布了一篇博客，宣布 <code>Rolldown-Vite</code> 的发布预览版！</p>',3)),o("p",null,[e[1]||(e[1]=d("博文地址：")),o("a",u,[e[0]||(e[0]=d("https://voidzero.dev/posts/announcing-rolldown-vite")),t(n)])]),e[11]||(e[11]=o("h4",{id:"往期精彩推荐",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#往期精彩推荐","aria-hidden":"true"},"#"),d(" 往期精彩推荐")],-1)),o("ul",null,[o("li",null,[o("a",p,[e[2]||(e[2]=d("🚀🚀🚀 这些高效实用的 vite 插件你一定要知道！更新弹窗、mock 数据、开发快捷键、自动导入...")),t(n)])]),o("li",null,[o("a",v,[e[3]||(e[3]=d("⚡️ 量大管饱，这 9 个 vite 插件让你的开发更简单！🚀🚀🚀")),t(n)])]),o("li",null,[o("a",h,[e[4]||(e[4]=d("苏醒吧，Remix！好消息，Remix 将基于 Preact 重构，更快更轻量！🚀🚀🚀")),t(n)])]),e[5]||(e[5]=o("li",null,"更多精彩文章欢迎关注我的公众号：萌萌哒草头将军",-1))]),e[12]||(e[12]=i(`<h3 id="正文" tabindex="-1"><a class="header-anchor" href="#正文" aria-hidden="true">#</a> 正文</h3><h4 id="rolldown-vite-的背景与技术基础" tabindex="-1"><a class="header-anchor" href="#rolldown-vite-的背景与技术基础" aria-hidden="true">#</a> <code>Rolldown-Vite</code> 的背景与技术基础</h4><p><code>Rolldown-Vite</code> 是 <code>VoidZero</code> 团队过去 <code>一年</code> 努力的成果，目标是打造下一代 <code>JavaScript</code> 工具链。核心组件 <code>Rolldown</code> 是一个基于 <code>Rust</code> 的打包器，性能远超传统的 <code>Rollup</code> 和 <code>esbuild</code>。它依托 <code>Oxc</code> 工具集，包括解析器、转换器、解析器、压缩器和 <code>linter</code>，为 <code>JavaScript</code> 和 <code>TypeScript</code> 的处理提供了高效的基础支持。</p><p>目前，<code>Rolldown-Vite</code> 已实现与 <code>Vite</code> 的初始功能齐全，开发者可以将其作为 <code>Vite</code> 的直接替代品，立即体验性能提升。作为技术预览版本，<code>VoidZero</code> 邀请开发者试用并提供反馈，以进一步优化。</p><h4 id="显著的性能提升" tabindex="-1"><a class="header-anchor" href="#显著的性能提升" aria-hidden="true">#</a> 显著的性能提升</h4><p><code>Rolldown-Vite</code> 在实际项目中的性能表现令人瞩目，以下是一些关键案例的数据：</p><p>在多个知名项目中，使用 <code>Rolldown-Vite</code> 构建工具均带来了显著的性能优化和内存占用改善：</p><ul><li><strong>GitLab</strong>：原始构建时间为 2.5 分钟，使用 Rolldown-Vite 后仅需 40 秒，构建内存使用更是减少了 <strong>100 倍</strong>。</li><li><strong>Excalidraw</strong>：构建时间从 22.9 秒降至 1.4 秒，性能提升高达 <strong>16 倍</strong>。</li><li><strong>PLAID Inc.</strong>：构建时间从 1 分 20 秒缩短为 5 秒，同样实现了 <strong>16 倍</strong>的提升。</li><li><strong>Appwrite</strong>：构建时间从 12 分钟降至 3 分钟，内存占用减少了 <strong>4 倍</strong>。</li><li><strong>Particl</strong>：构建时间从 1 分钟优化至 6 秒，相较于 Vite 提升 <strong>10 倍</strong>，相较于 Next.js 提升 <strong>29 倍</strong>。</li></ul><p>这些数据表明，Rolldown-Vite 不仅大幅缩短了构建时间，还显著降低了内存使用。例如，博客本身使用 VitePress on Rolldown-Vite，在 Netlify 上生产构建仅需 1.8 秒，展现了其高效性。</p><h3 id="使用方法与配置" tabindex="-1"><a class="header-anchor" href="#使用方法与配置" aria-hidden="true">#</a> 使用方法与配置</h3><p>使用 Rolldown-Vite 非常简单，开发者只需在现有 Vite 项目中进行少量配置即可。以下是具体步骤：</p><p><strong>安装与配置示例</strong><br> 在 <code>package.json</code> 中将 <code>vite</code> 替换为 <code>npm:rolldown-vite@latest</code>：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{
  &quot;dependencies&quot;: {
    &quot;vite&quot;: &quot;npm:rolldown-vite@latest&quot;
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于使用 VitePress 或其他以 Vite 为 peer dependency 的元框架，可以通过包管理器的 overrides 配置替换。例如：</p><ul><li>npm：添加 <code>overrides</code> 字段：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{
  &quot;overrides&quot;: {
    &quot;vite&quot;: &quot;npm:rolldown-vite@latest&quot;
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>pnpm：添加 <code>pnpm.overrides</code> 字段：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{
  &quot;pnpm&quot;: {
    &quot;overrides&quot;: {
      &quot;vite&quot;: &quot;npm:rolldown-vite@latest&quot;
    }
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装依赖后，运行 <code>npm install</code> 或 <code>pnpm install</code>，然后启动开发服务器或构建项目，无需额外配置即可体验性能提升。</p><p><strong>效果</strong><br> 替换后，开发者可以继续使用 Vite 的命令（如 <code>vite dev</code> 或 <code>vite build</code>），但底层使用 Rolldown 进行打包，构建速度显著提升。可能出现一些警告，提示尚未支持的选项或已废弃的 API，这些将在后续版本中逐步优化。</p><h4 id="兼容性与迁移" tabindex="-1"><a class="header-anchor" href="#兼容性与迁移" aria-hidden="true">#</a> 兼容性与迁移</h4><p><code>Rolldown-Vite</code> 致力于与 <code>Vite</code> 生态系统无缝兼容。<code>VoidZero</code> 团队分叉了 <code>Vite</code> 生态系统的 CI 测试，确保大多数框架和插件的兼容性。<code>Rolldown</code> 取代了 <code>esbuild</code> 的功能，由 <code>Oxc</code> 处理解析和转换，减少了对外部依赖的需要。对于不兼容的场景，开发者可以参考 <code>Rolldown</code> 迁移指南，了解已知问题和解决方案。</p><h4 id="未来规划" tabindex="-1"><a class="header-anchor" href="#未来规划" aria-hidden="true">#</a> 未来规划</h4><p><code>Rolldown-Vite</code> 的发展路线图分为三个阶段：</p><ul><li><strong>Phase One</strong>：当前阶段，目标是将 <code>Rolldown</code> 从 <code>Vite</code> 中分离为独立包，并提供技术预览版本供开发者尝试。</li><li><strong>Phase Two</strong>：未来几个月内，计划将 <code>Rolldown</code> 回合并进 <code>Vite</code>，届时将支持「全捆绑模式」（Fully Bundled Mode）。</li><li><strong>Phase Three</strong>：在后续阶段，「全捆绑模式」将成为 <code>Vite</code> 的默认构建方式，实现开发与生产环境的一致性体验。</li></ul><p>全捆绑模式（Full Bundle Mode）是未来的重点，将在开发和生产环境中提供一致的打包输出，解决 <code>Vite</code> 当前开发与生产不一致的问题（如模块分包导致的网络请求过多）。这将显著提升大型项目的开发体验，减少调试难度。</p><h3 id="最后" tabindex="-1"><a class="header-anchor" href="#最后" aria-hidden="true">#</a> 最后</h3><p><code>Rolldown-Vite</code> 的发布标志着前端构建工具的新篇章。未来，通过全捆绑模式和与 <code>Vite</code> 的深度整合，<code>Rolldown-Vite</code> 有望成为前端开发的标杆工具！</p><p>今天的分享就这些了，感谢大家的阅读，如果文章中存在错误的地方欢迎指正！</p><h4 id="往期精彩推荐-1" tabindex="-1"><a class="header-anchor" href="#往期精彩推荐-1" aria-hidden="true">#</a> 往期精彩推荐</h4>`,30)),o("ul",null,[o("li",null,[o("a",g,[e[6]||(e[6]=d("🚀🚀🚀 这些高效实用的 vite 插件你一定要知道！更新弹窗、mock 数据、开发快捷键、自动导入...")),t(n)])]),o("li",null,[o("a",m,[e[7]||(e[7]=d("⚡️ 量大管饱，这 9 个 vite 插件让你的开发更简单！🚀🚀🚀")),t(n)])]),o("li",null,[o("a",b,[e[8]||(e[8]=d("苏醒吧，Remix！好消息，Remix 将基于 Preact 重构，更快更轻量！🚀🚀🚀")),t(n)])]),e[9]||(e[9]=o("li",null,"更多精彩文章欢迎关注我的公众号：萌萌哒草头将军",-1))])])}const w=l(c,[["render",_],["__file","🚀🚀🚀 尤雨溪宣布 Vite 发布 Rolldown-Vite 预览版，性能超级快！⚡️⚡️⚡️.html.vue"]]);export{w as default};
