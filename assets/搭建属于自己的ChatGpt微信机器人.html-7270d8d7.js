import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as r,c as l,a as n,b as s,e as t,f as p}from"./app-086b4fa6.js";const u={},c={href:"https://github.com/zhayujie/chatgpt-on-wechat",target:"_blank",rel:"noopener noreferrer"},d={href:"https://github.com/zhayujie/chatgpt-on-wechat",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/goldfishh/chatgpt-tool-hub",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/chatanywhere/GPT_API_free?tab=readme-ov-file#%E5%85%8D%E8%B4%B9%E4%BD%BF%E7%94%A8",target:"_blank",rel:"noopener noreferrer"},m={href:"https://link-ai.tech/console/interface",target:"_blank",rel:"noopener noreferrer"},b={href:"https://link-ai.tech/console/createApp",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/goldfishh/chatgpt-tool-hub/blob/master/docs/apply_optional_tool.md",target:"_blank",rel:"noopener noreferrer"};function f(v,a){const e=i("ExternalLinkIcon");return r(),l("div",null,[a[24]||(a[24]=n("blockquote",null,[n("p",null,"欢迎关注我的公众号：萌萌哒草头将军，关注或者入群获取工具书 PDF。")],-1)),a[25]||(a[25]=n("p",{align:"center"},[n("img",{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/efc89e9c4b9d48c1a813a34724d79c73~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1224&h=1714&s=201113&e=jpg&b=fdfdfd",alt:"20240407102424.jpg",width:"30%"})],-1)),a[26]||(a[26]=n("p",null,"大家好，我是草头将军，好久不见。",-1)),n("p",null,[a[2]||(a[2]=s("本文是基于")),n("a",c,[a[0]||(a[0]=s("chatgpt-on-wechat")),t(e)]),a[3]||(a[3]=s("项目的部署文章，感兴趣的可以直接移步")),n("a",d,[a[1]||(a[1]=s("这里")),t(e)])]),a[27]||(a[27]=n("h3",{id:"项目介绍",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#项目介绍","aria-hidden":"true"},"#"),s(" 项目介绍")],-1)),a[28]||(a[28]=n("p",null,"基于大模型搭建的聊天机器人。",-1)),n("ul",null,[a[7]||(a[7]=n("li",null,"支持平台：企业微信、微信 公众号、飞书、钉钉 等接入",-1)),a[8]||(a[8]=n("li",null,"支持模型：GPT3.5/GPT4.0/Claude/文心一言/讯飞星火/通义千问/Gemini/GLM-4/Claude/LinkAI，",-1)),a[9]||(a[9]=n("li",null,"支持能力：处理文本、语音和图片，访问操作系统和互联网",-1)),a[10]||(a[10]=n("li",null,"支持知识库：基于自有知识库进行定制企业智能客服（基于 LinkAI 实现）。",-1)),n("li",null,[a[5]||(a[5]=s("支持插件：基于插件系统。如 tools（")),n("a",h,[a[4]||(a[4]=s("点这里")),t(e)]),a[6]||(a[6]=s("）、LinkAI 等"))])]),a[29]||(a[29]=p('<h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h3><h4 id="_1-基于-chat-gpt-的对话" tabindex="-1"><a class="header-anchor" href="#_1-基于-chat-gpt-的对话" aria-hidden="true">#</a> 1.基于 chat-gpt 的对话]</h4><p align="center"><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/baa7eb7ff21147fd87ed384a6b36df39~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=850&amp;h=1142&amp;s=463588&amp;e=png&amp;b=fafafa" alt="基于chat-gpt的对话" width="50%"></p><h4 id="_2-图片生成-以文找图-gpt3-不支持" tabindex="-1"><a class="header-anchor" href="#_2-图片生成-以文找图-gpt3-不支持" aria-hidden="true">#</a> 2.图片生成（以文找图），gpt3 不支持</h4><p align="center"><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0316e223da0f4c39bbbe8e92ec56e3b5~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=840&amp;h=1032&amp;s=694455&amp;e=png&amp;b=efe8e6" alt="image.png" width="50%"></p><h4 id="_3-插件系统" tabindex="-1"><a class="header-anchor" href="#_3-插件系统" aria-hidden="true">#</a> 3.插件系统</h4><h6 id="_3-1-文档总结-基于-link-ai" tabindex="-1"><a class="header-anchor" href="#_3-1-文档总结-基于-link-ai" aria-hidden="true">#</a> 3.1 文档总结（基于 Link-AI）</h6><p align="center"><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e30d2562e64a4ed9b909021e914de34c~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=848&amp;h=1186&amp;s=435020&amp;e=png&amp;b=fafafa" alt="文档总结" width="50%"></p><h6 id="_3-2-文档总结-基于-python-库" tabindex="-1"><a class="header-anchor" href="#_3-2-文档总结-基于-python-库" aria-hidden="true">#</a> 3.2 文档总结（基于 python 库）</h6><p align="center"><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bc038b28182c403492fa5598e93292c1~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=850&amp;h=1190&amp;s=525122&amp;e=png&amp;b=fafafa" alt="image.png" width="50%"></p><h6 id="_3-3-论文查找" tabindex="-1"><a class="header-anchor" href="#_3-3-论文查找" aria-hidden="true">#</a> 3.3 论文查找</h6><p align="center"><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2db008bff72c4e26b612c2f247fff295~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=838&amp;h=1100&amp;s=451763&amp;e=png&amp;b=fafafa" alt="image.png" width="50%"></p><h6 id="_3-wikipedia" tabindex="-1"><a class="header-anchor" href="#_3-wikipedia" aria-hidden="true">#</a> 3.wikipedia</h6><p align="center"><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d16a6177e1a84d95b361dc74023adc76~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=836&amp;h=1104&amp;s=510250&amp;e=png&amp;b=fafafa" alt="image.png" width="50%"></p><h3 id="准备工作" tabindex="-1"><a class="header-anchor" href="#准备工作" aria-hidden="true">#</a> 准备工作</h3><h4 id="_1-获取对应的账号" tabindex="-1"><a class="header-anchor" href="#_1-获取对应的账号" aria-hidden="true">#</a> 1.获取对应的账号</h4><p>以免费 gpt3 为例说明，你也可以购买 gpt4 的 key，这里不做演示</p><h6 id="_1-1-申请测试免费的账号" tabindex="-1"><a class="header-anchor" href="#_1-1-申请测试免费的账号" aria-hidden="true">#</a> 1.1 申请测试免费的账号</h6>',18)),n("p",null,[n("a",k,[a[11]||(a[11]=s("点这里")),t(e)]),a[12]||(a[12]=s("，记住申请的 key，和下面的几个转发地址"))]),a[30]||(a[30]=n("h6",{id:"_1-2-申请-link-ai-账号-非必需",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-2-申请-link-ai-账号-非必需","aria-hidden":"true"},"#"),s(" 1.2 申请 Link-AI 账号（非必需）")],-1)),n("p",null,[n("a",m,[a[13]||(a[13]=s("点这里")),t(e)]),a[15]||(a[15]=s("，创建 API key，并且")),n("a",b,[a[14]||(a[14]=s("创建应用")),t(e)]),a[16]||(a[16]=s("，记住 App code"))]),a[31]||(a[31]=p(`<h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3><h4 id="_1-本地运行-需要-python-环境" tabindex="-1"><a class="header-anchor" href="#_1-本地运行-需要-python-环境" aria-hidden="true">#</a> 1.本地运行（需要 python 环境）</h4><h6 id="_1-1-拉取代码" tabindex="-1"><a class="header-anchor" href="#_1-1-拉取代码" aria-hidden="true">#</a> 1.1 拉取代码</h6><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> pull https://github.com/zhayujie/chatgpt-on-wechat.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h6 id="_1-2-安装依赖" tabindex="-1"><a class="header-anchor" href="#_1-2-安装依赖" aria-hidden="true">#</a> 1.2 安装依赖</h6><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 主应用依赖</span>
pip3 <span class="token function">install</span> requirements.txt
<span class="token comment"># 插件依赖</span>
pip3 <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements-optional.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_1-3-配置参数" tabindex="-1"><a class="header-anchor" href="#_1-3-配置参数" aria-hidden="true">#</a> 1.3 配置参数</h6><p>主应用：基于根目录下的<code>config-template.json</code>文件生成<code>config.json</code>，参数说明如下</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code># config.json文件内容示例
<span class="token punctuation">{</span>
  <span class="token property">&quot;open_ai_api_key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;YOUR API KEY&quot;</span><span class="token punctuation">,</span>                          # 填入上面创建的 OpenAI API KEY
  <span class="token property">&quot;model&quot;</span><span class="token operator">:</span> <span class="token string">&quot;gpt-3.5-turbo&quot;</span><span class="token punctuation">,</span>                                   # 模型名称<span class="token punctuation">,</span> 支持 gpt<span class="token number">-3.5</span>-turbo<span class="token punctuation">,</span> gpt<span class="token number">-3.5</span>-turbo-16k<span class="token punctuation">,</span> gpt<span class="token number">-4</span><span class="token punctuation">,</span> wenxin<span class="token punctuation">,</span> xunfei<span class="token punctuation">,</span> claude<span class="token number">-3</span>-opus<span class="token number">-20240229</span>
  <span class="token property">&quot;claude_api_key&quot;</span><span class="token operator">:</span><span class="token string">&quot;YOUR API KEY&quot;</span>                             # 如果选用claude3模型的话，配置这个key，同时如想使用生图，语音等功能，仍需配置open_ai_api_key
  <span class="token property">&quot;proxy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>                                                # 代理客户端的ip和端口，国内环境开启代理的需要填写该项，如 <span class="token string">&quot;127.0.0.1:7890&quot;</span>
  <span class="token property">&quot;single_chat_prefix&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;bot&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;@bot&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                      # 私聊时文本需要包含该前缀才能触发机器人回复
  <span class="token property">&quot;single_chat_reply_prefix&quot;</span><span class="token operator">:</span> <span class="token string">&quot;[bot] &quot;</span><span class="token punctuation">,</span>                       # 私聊时自动回复的前缀，用于区分真人
  <span class="token property">&quot;group_chat_prefix&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;@bot&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                              # 群聊时包含该前缀则会触发机器人回复
  <span class="token property">&quot;group_name_white_list&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;ChatGPT测试群&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ChatGPT测试群2&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> # 开启自动回复的群名称列表
  <span class="token property">&quot;group_chat_in_one_session&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;ChatGPT测试群&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>              # 支持会话上下文共享的群名称
  <span class="token property">&quot;image_create_prefix&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;画&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;看&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;找&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                   # 开启图片回复的前缀
  <span class="token property">&quot;conversation_max_tokens&quot;</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>                            # 支持上下文记忆的最多字符数
  <span class="token property">&quot;speech_recognition&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                                # 是否开启语音识别
  <span class="token property">&quot;group_speech_recognition&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                          # 是否开启群组语音识别
  <span class="token property">&quot;use_azure_chatgpt&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                                 # 是否使用Azure ChatGPT service代替openai ChatGPT service. 当设置为<span class="token boolean">true</span>时需要设置 open_ai_api_base，如 https<span class="token operator">:</span><span class="token comment">//xxx.openai.azure.com/</span>
  <span class="token property">&quot;azure_deployment_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>                                  # 采用Azure ChatGPT时，模型部署名称
  <span class="token property">&quot;azure_api_version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>                                    # 采用Azure ChatGPT时，API版本
  <span class="token property">&quot;character_desc&quot;</span><span class="token operator">:</span> <span class="token string">&quot;你是ChatGPT, 一个由OpenAI训练的大型语言模型, 你旨在回答并解决人们的任何问题，并且可以使用多种语言与人交流。&quot;</span><span class="token punctuation">,</span>  # 人格描述
  # 订阅消息，公众号和企业微信channel中请填写，当被订阅时会自动回复，可使用特殊占位符。目前支持的占位符有<span class="token punctuation">{</span>trigger_prefix<span class="token punctuation">}</span>，在程序中它会自动替换成bot的触发词。
  <span class="token property">&quot;subscribe_msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;感谢您的关注！\\n这里是ChatGPT，可以自由对话。\\n支持语音对话。\\n支持图片输出，画字开头的消息将按要求创作图片。\\n支持角色扮演和文字冒险等丰富插件。\\n输入{trigger_prefix}#help 查看详细指令。&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;use_linkai&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                                        # 是否使用LinkAI接口，默认关闭，开启后可国内访问，使用知识库和MJ
  <span class="token property">&quot;linkai_api_key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>                                       # LinkAI Api Key
  <span class="token property">&quot;linkai_app_code&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>                                       # LinkAI 应用code
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9)),n("p",null,[a[18]||(a[18]=s("插件的配置根据目录下")),a[19]||(a[19]=n("code",null,"plugins/config.json.template",-1)),a[20]||(a[20]=s("生成")),a[21]||(a[21]=n("code",null,"plugins/config.json",-1)),a[22]||(a[22]=s("，详细的配置过程")),n("a",g,[a[17]||(a[17]=s("点这里")),t(e)]),a[23]||(a[23]=s("，原文档很清晰明了，这里不多说了"))]),a[32]||(a[32]=p(`<h6 id="_1-4-运行" tabindex="-1"><a class="header-anchor" href="#_1-4-运行" aria-hidden="true">#</a> 1.4 运行</h6><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python3 app.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-docker-版本-需要-docker-环境" tabindex="-1"><a class="header-anchor" href="#_2-docker-版本-需要-docker-环境" aria-hidden="true">#</a> 2.docker 版本（需要 docker 环境）</h4><h6 id="_2-1-拉取镜像" tabindex="-1"><a class="header-anchor" href="#_2-1-拉取镜像" aria-hidden="true">#</a> 2.1 拉取镜像</h6><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull  ghcr.io/zhayujie/chatgpt-on-wechat:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此时，镜像列表中多出一个镜像</p><p align="center"><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/61c8c38f76a949dd80751e431b9566ba~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2518&amp;h=1358&amp;s=582137&amp;e=png&amp;b=f6f6f8" alt="image.png" width="50%"></p><h6 id="配置参数" tabindex="-1"><a class="header-anchor" href="#配置参数" aria-hidden="true">#</a> 配置参数</h6><p>点击运行按钮，会出现弹窗：</p><p align="center"><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d8d3aa7f38f9499888f9e7e747ca0e90~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1200&amp;h=1232&amp;s=350022&amp;e=png&amp;b=ffffff" alt="image.png" width="50%"></p><p>名称随机，我们需要设置环境变量，即上述的参数，但是在做环境变量时，需要将 key 写成大写，例如：<code>OPEN_AI_API_KEY</code>。</p><h6 id="运行" tabindex="-1"><a class="header-anchor" href="#运行" aria-hidden="true">#</a> 运行</h6><p>点击运行按钮，即可运行。</p><h3 id="登陆" tabindex="-1"><a class="header-anchor" href="#登陆" aria-hidden="true">#</a> 登陆</h3><p>运行之后会出现一个二维码，使用微信扫码即可完成登陆。扫码成功后日志会打印：Start auto replying.</p><p align="center"><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6f55f5c682474b95a8c4c9a781d5f663~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2202&amp;h=1002&amp;s=313303&amp;e=png&amp;b=24272e" alt="image.png" width="50%"></p><h3 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h3><p>你可以使用对话测试，也可通过内置命令查看：</p><p align="center"><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9c40e9294a8741eb93144df355db27c9~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=840&amp;h=908&amp;s=310893&amp;e=png&amp;b=fafafa" alt="image.png" width="50%"></p><p align="center"><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/19ad01e80c0d44f0b122f35b2a5a5522~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=844&amp;h=826&amp;s=272229&amp;e=png&amp;b=f9f9f9" alt="image.png" width="50%"></p><h3 id="说明" tabindex="-1"><a class="header-anchor" href="#说明" aria-hidden="true">#</a> 说明</h3><ul><li>tool 插件是默认开启的，如果配置 Link-Ai key 和 code 的话默认打开文档总结，支持链接和微信卡片链接。</li><li>Link-Ai 是根据会话 Token 收费的，但是可以通过积分免费使用。</li><li>可以开启语音识别功能</li><li>我用的是小号微信登陆的，在大号建立的会话窗口</li><li>部分插件功能原作者还在开发测试调优中</li></ul><p>好了，今天的分享就到这里了，感谢你的阅读，欢迎关注我的公众号：萌萌哒草头将军</p>`,23))])}const j=o(u,[["render",f],["__file","搭建属于自己的ChatGpt微信机器人.html.vue"]]);export{j as default};
